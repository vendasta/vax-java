steps:
- name: gcr.io/cloud-builders/gsutil
  id: 'ciphers'
  args:
  - cp
  - gs://java-sdk-maven-ciphers/*
  - /ciphers
  volumes:
  - name: ciphers
    path: /ciphers
  waitFor: ['-']
- name: gcr.io/cloud-builders/gcloud
  id: 'key'
  waitFor: ['ciphers']
  args:
  - kms
  - decrypt
  - --ciphertext-file=/ciphers/key.enc
  - --plaintext-file=/key/key.asc
  - --location=global
  - --keyring=container-builder
  - --key=maven
  volumes:
  - name: ciphers
    path: /ciphers
  - name: key
    path: /key
- name: gcr.io/cloud-builders/gcloud
  id: 'password'
  waitFor: ['ciphers']
  args:
  - kms
  - decrypt
  - --location=global
  - --keyring=container-builder
  - --key=oss_sonatype_org-password
  - --plaintext-file=/pass/password
  - --ciphertext-file=/ciphers/password.enc
  volumes:
  - name: ciphers
    path: /ciphers
  - name: pass
    path: /pass
- name: gcr.io/cloud-builders/gcloud
  id: 'passphrase'
  waitFor: ['ciphers']
  args:
  - kms
  - decrypt
  - --location=global
  - --keyring=container-builder
  - --key=oss_sonatype_org-password
  - --plaintext-file=/pass/passphrase
  - --ciphertext-file=/ciphers/passphrase.enc
  volumes:
  - name: ciphers
    path: /ciphers
  - name: pass
    path: /pass
- name: 'maven:3.9.6-eclipse-temurin-21'
  waitFor: ['key', 'password', 'passphrase']
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Install GPG if not available
    apt-get update && apt-get install -y gnupg
    
    # Import GPG key and set trust
    gpg --batch --import /key/key.asc
    
    # List imported keys for debugging
    gpg --list-secret-keys --keyid-format LONG
    
    # Get the key ID and set ultimate trust
    KEY_ID=$$(gpg --list-secret-keys --keyid-format LONG | grep 'sec' | head -1 | awk '{print $$2}' | cut -d'/' -f2)
    echo "Using GPG key ID: $$KEY_ID"
    
    # Set trust level for the key (ultimate trust)
    echo -e "5\ny\n" | gpg --batch --command-fd 0 --expert --edit-key $$KEY_ID trust quit
    
    # Verify key is usable and show trust info
    gpg --list-secret-keys --keyid-format LONG
    gpg --list-keys --with-colons $$KEY_ID
    
    # Show detailed key information
    echo "=== GPG Key Details ==="
    gpg --list-secret-keys --with-fingerprint $$KEY_ID
    echo "=== Trust Database ==="
    gpg --check-trustdb --verbose
    echo "=== Testing key usability ==="
    echo "test" | gpg --batch --quiet --armor --detach-sign --default-key $$KEY_ID --pinentry-mode loopback --passphrase $$(cat /pass/passphrase) || echo "Key test failed"
    
    # Set up Maven settings with credentials
    mkdir -p ~/.m2
    cat > ~/.m2/settings.xml <<EOF
    <settings>
      <servers>
        <server>
          <id>ossrh</id>
          <username>vendasta</username>
          <password>$$(cat /pass/password)</password>
        </server>
      </servers>
    </settings>
    EOF
    
    # Verify settings.xml was created correctly
    echo "=== Maven settings.xml ==="
    cat ~/.m2/settings.xml
    echo "=========================="
    
    # Deploy to Maven Central  
    export GPG_TTY=$$(tty)
    mvn clean deploy -X \
      -Dgpg.passphrase=$$(cat /pass/passphrase) \
      -Dgpg.batch=true \
      -Dgpg.keyname=$$KEY_ID \
      -Dgpg.executable=gpg
  volumes:
  - name: key
    path: /key
  - name: pass
    path: /pass
